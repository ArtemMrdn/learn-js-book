//Перебираемые объекты
// Symbol.iterator
/*(*)
Когда цикл for..of запускается, он вызывает этот метод один раз (или выдаёт ошибку, если метод не найден). Этот метод должен вернуть итератор – объект с методом next.
Дальше for..of работает только с этим возвращённым объектом.
Когда for..of хочет получить следующее значение, он вызывает метод next() этого объекта.
Результат вызова next() должен иметь вид {done: Boolean, value: any}, где done=true означает, что итерация закончена, в противном случае value содержит очередное значение.*/


let range = {
  from: 1,
  to: 5,
};
//Мы хотим чтобь работал for..of; for(let num of range)  ... num = 1, 2, 3, 4, 5
//для этого мы добавляем Symbol.iterator (*)
// 1. вызов for..of сначала вызывает эту функцию
range[Symbol.iterator] = function() {
// ...она возвращает объект итератора:
// 2. Далее, for..of работает только с этим итератором, запрашивая у него новые значения
  return {
    current: this.from,
    last: this.to,

    // 3. next() вызывается на каждой итерации цикла for..of
    next() {
      // 4. он должен вернуть значение в виде объекта {done:.., value :...}
      if (this.current <= this.last) {
        return { done: false, value: this.current++ };
      } else {
        return { done: true };
      }
    }
  };
};

// теперь работает!
for (let num of range) {
  alert(num); // 1, затем 2, 3, 4, 5
}



//Строка – перебираемый объект

for (let char of "test") {
  // срабатывает 4 раза: по одному для каждого символа
  alert( char ); // t, затем e, затем s, затем t
}



// Array.from принмает итерируемый обьект или псевдомассив и делает из него настоящий Array. После этого мы уже можем использовать методы массивов.
let arrayLike = {
  0: 'Hello',
  1: 'World!',
  length: 2
};
let arr = Array.from(arrayLike);  //принимает обьект проверяет является ли он итерируемым или псевдомасивом, затем создает новый масив и копирует туда все элементы. \
alert(arr.pop) // World!




// Здесь мы используем Array.from чтобы превратит строку в массив элемонтов 
let str = 'xI';
let chars = Array.from(str);

alert(chars[0]) //x
alert(chars[1]) //I
alert(chars.length) //2