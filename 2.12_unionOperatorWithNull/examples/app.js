//Оператор объединения с null '??'

/*Результат выражения a ?? b будет следующим:

a, если значение a определено,
b, если значение a не определено.
То есть оператор ?? возвращает первый аргумент, если он не null/undefined, иначе второй.*/


let user;
alert(user ?? 'Привет'); // Привет, так как user неопределен


let firstName;
let lastName;
let nickName = 'Привет'
alert(firstName ?? lastName ?? nickName ?? 'Аноним')

/*
Сравнение с || : 
|| возвращает первое истинное значение.
?? возвращает первое определённое значение. */


//Приоритет 
//Оператор ?? имеет довольно низкий приоритет: 5, согласно таблице на MDN. Таким образом, оператор ?? вычисляется до = и ?, но после большинства других операций, таких как +, *.
let height = null;
let width = null;

// важно: использовать круглые скобки
let area = (height ?? 100) * (width ?? 50);

alert(area); // 5000

//Использование ?? вместе с && или ||.  JavaScript запрещает использование оператора ?? вместе с && и ||, если только приоритет явно не указан в круглых скобках.
//Пример 1

let x = 1 && 2 ?? 3; // Синтаксическая ошибка

//Пример 2

let x = (1 && 2) ?? 3; // Работает без ошибок

alert(x); // 2


// будет height=100, если переменная height равна null или undefined
height = height ?? 100;
